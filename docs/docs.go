// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Thiago Menezes",
            "email": "thg.mnzs@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
		"/health": {
			"get": {
                "description": "Get health status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Get health status",
                "responses": {
                    "200": {
                        "description": "OK",
                    },
					"500": {
						"description": "NOT OK",
					}
                }
            },
		},
        "/complains": {
            "get": {
                "description": "Get details of all complains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complains"
                ],
                "summary": "Get details of all complains",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ComplainOut"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new complain with the input paylod",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complains"
                ],
                "summary": "Create a new complain",
                "parameters": [
                    {
                        "description": "Create complain",
                        "name": "complain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ComplainIn"
                        }
                    }
                ],
                "responses": {
                    "201": {}
                }
            }
        },
        "/complains/{parameter}": {
            "get": {
                "description": "List complains by id",
                "summary": "Get complains by id",
                "tags": [
                    "Complains"
                ],
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parameter",
                        "in": "path",
                        "description": "Id of Complain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "succesful operation"
                    },
                    "500": {
                        "description": "error internal server"
                    }
                }
            },
            "put": {
                "description": "Update complain",
                "summary": "Update Complain",
                "tags": [
                    "Complains"
                ],
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parameter",
                        "in": "path",
                        "description": "ID of the complain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "description": "Request body",
                        "schema": {
                            "$ref": "#/definitions/model.ComplainIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "bad request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "error internal server"
                    }
                }
            },
            "delete": {
                "description": "Delete complain by ID",
                "summary": "Delete complain",
                "tags": [
                    "Complains"
                ],
                "deprecated": false,
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parameter",
                        "in": "path",
                        "description": "ID of the complain",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "500": {
                        "description": "error internal server"
                    }
                }
            }
        },
	 	"/complains/{nameCompany}/{cityComplain}": {
            "get": {
				"description": "List complains by company and city",
				"summary": "Get complains by company and city",
				"tags": [
					"Complains"
				],
				"operationId": "ComplainsLeBiscuitSOPauloGet",
				"deprecated": false,
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "nameCompany",
						"in": "path",
						"description": "Name company",
						"required": true,
						"type": "string"
					},
					{
						"name": "cityComplain",
						"in": "path",
						"description": "City of the complain",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "successful operation"
					},
					"500": {
						"description": "error internal server"
					}
				}

			}
        },
    },
    "definitions": {
        "model.Company": {
            "type": "object",
            "required": [
                "title",
                "description",
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "title company",
                    "example": "Magazine Luiza"
                },
                "description": {
                    "type": "string",
                    "description": "description of the company",
                    "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                },
            }
        },
        "model.ComplainIn": {
            "type": "object",
            "required": [
                "company",
                "description",
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "description": "title complain",
                    "example": "Nenhuma atenção com o cliente"
                },
                "description": {
                    "type": "string",
                    "description": "description of the complain",
                    "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                },
                "locale": {
                    "type": "object",
                    "properties": {
                        "city": {
                            "type": "string",
                            "description": "city of the complain",
                            "example": "Rio de Janeiro"
                        },
                        "state": {
                            "type": "string",
                            "description": "state of the complain",
                            "example": "Rio de Janeiro"
                        }
                    }
                },
                "company": {
                    "type": "object",
                    "$ref": "#/definitions/model.Company"
                }
            }
        },
        "model.ComplainOut": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
				"title": {
                    "type": "string",
                    "description": "title complain",
                    "example": "Nenhuma atenção com o cliente"
                },
                "description": {
                    "type": "string",
                    "description": "description of the complain",
                    "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                },
				"company": {
                    "type": "object",
                    "$ref": "#/definitions/model.Company"
                },
                "locale": {
                    "type": "object",
                    "$ref": "#/definitions/model.Locale"
                },
                "countPageViews": {
                    "type": "integer"
                },
                "isOnTop10BadRA": {
                    "type": "bool"
                }
            }
        },
        "model.Locale": {
            "type": "object",
            "properties": {
                "city": {
					"type": "string",
					"description": "city of the complain",
					"example": "Rio de Janeiro"
				},
				"state": {
					"type": "string",
					"description": "state of the complain",
					"example": "Rio de Janeiro"
				}
            }
        },
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Ra Challenge API",
	Description: "Ra Challenge API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
